chapter 1
在Web页中嵌入外部媒体文件（图像和音视频）
chapter 2
理解数字媒体文件（图像、音视频）的概念，学会用HTML的三个标记：img、audio、video把外部媒体文件的标记的嵌入Web页，利用CSS语言控制Web页媒体元素和其他元素之间的排版。
chapter 3
img ， div ， display ，block ，inline ，px ，width ，audio ，video，control，gif，mp3，mp4 。
chapter 4
内有2个HTML文件和2个动态gif图像文件，演示了img标记嵌入动态gif图像，为了控制图像元素的外观，用CSS语言演示使用了控制图像排版方法（inline和block），也可用来初步探讨图像元素和其容器div、Web页body元素的boxModel的关系。
内有2个HTML文件、一个音频mp3文件、一个视频mp4文件，演示了用audio 和video 标签在Web页中嵌入媒体文件。audio 和video 标签是W3C的HTML5的新增标准，已经在各类现代浏览器广泛实现，可以播放常见的媒体文件类型。为避免干扰，现代浏览器在未经用户同意前提下，不支持直接播放媒体，因此audio 和video标记的control属性非常必要，用户可以通过浏览器自带的面板来实现控制。最后，三种媒体元素在Web页的CSS排版中，其display属性为inline。
chapter 5
We've looked at a lot of text so far in this course, but the web would be really boring only using text. Let's start looking at how to make the web come alive with more interesting content! This module explores how to use HTML to include multimedia in your web pages, including the different ways that images can be included, and how to embed video, audio, and even entire webpages.
Web developers have wanted to use video and audio on the Web for a long time, ever since the early 2000s when we started to have bandwidth fast enough to support any kind of video (video files are much larger than text or even images.) In the early days, native web technologies such as HTML didn't have the ability to embed video and audio on the Web, so proprietary (or plugin-based) technologies like Flash — and later, Silverlight (both of which are now obsolete) — became popular for handling such content. This kind of technology worked OK, but it had a number of problems, including not working well with HTML/CSS features, security issues, and accessibility issues.
A native solution would solve much of this if implemented correctly. Fortunately, a few years later the HTML5 specification had such features added, with the <video> and <audio> elements, and some shiny new JavaScript APIs for controlling them. We'll not be looking at JavaScript here — just the basic foundations that can be achieved with HTML.
