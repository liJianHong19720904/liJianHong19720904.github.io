1.title
  Object to DOM（探索篇：内存对象和Web页的文档对象模型）
2.introduction
  对象是我们用计算机中的数据模拟现代信息的一种建模方法，在现代高级语言中，面向对象的程序设计已经普及，JavaScript为我们提供了一系列最简洁方法，用来为构建代码构建自己设计的对象。本课我们利用四个案例，演示了从手工创建对象到利用函数自动创建对象的过程，JavaScript函数可以通过设计为构造函数与对象发生重要联系。

3.keyword
  width:20%; ，height:20%; ， display:inline-block; ， background-color:rgba(0,0,0,0.1); ， document.createElement('div')  ，document.createElement('p')  ，父元素.appendChild(子元素) ，div.style.borderColor ，div.style.height  ，内存对象.divDom.style.left  ，内存对象.divDom.style.display 。 
	
4.project
  <a src=objDom-1.html>本例演示用JavaScript语言在Web页，用代码动态（在程序运行的时刻，on the fly）向Web页添加元素对象。
  <a src=objDom-2.html>本例稍微把Dom操作的代码片段移动位置，就实现在Web页生成100个矩形，且不会有报错信息，需要从Web页内存模型建立的角度理解和分析这种现象。
  <a src=objDom-3.html>本例在构造函数创建对象模型基础上，利用Web的DOM技术展现内存信息的可视化外观！
  <a src=objDom-4.html>本例在构造函数创建对象模型，利用DOM技术创建“UI外观”基础上，再利用点击事件（异步代码入门）来逐一展现对象外观！
  <a src=objDom-5.html>本例利用onmouseover事件触发对象的移动动画，为实现异步代码能获取变量不断变化的数据，我们引入了函数闭包概念和js变量作用域的lexical语法，本例难度较大，仅作学有余力的学习者参考，一般无需掌握。
5.reading

Understanding the DOM is key to being able to manipulate the text or HTML in a web page. Using the DOM, you can create animations, update data without refreshing web pages, move objects around in a browser, and much more! 
The Document Object Model is the interface for JavaScript to talk to and work with HTML documents inside of browser windows. The DOM can be visualized as an inverted tree, with each part of the HTML document branching off of its containing part.
A DOM tree is made up of individual components, called nodes. The main node, from which every other node springs, is called the document node. The node under the document node is the root element node. For HTML documents, the root node is HTML. After the root  node, every element, attribute, and piece of content in the document is represented by a node in the tree that comes from another node in the tree.
