1.title
   Images and DOM Model Manipulating （探索篇：Web图像和控制DOM模型）
2.introduction
  图像插入Web页面内，成为了最常见的DOM对象，与文字不同的是每个图像数据不再Web页内，而是源于外部图像文件，有时在网络上加载图像成为加载Web页的大部分流量。本课编码实践中，我们使用10个性价比较好的图像jpg文件），利用六个逐级提升要求的案例，探索了图像这种DOM对象，实现图像静态和动态地加载。本课程前面三个案例比较基础，而后面3个案例利用了异步代码实现动画，供较强的学习者作为分析和解决问题的训练案例。

3.keyword
  相对路径 ， "../路径名/文件名"  ， 图像DOM对象.src ， document.body.appendChild ，document.querySelector("div img"); ，document.querySelector("div#fPic"); ，document.querySelectorAll("div#fPic img"); ，window.innerWidth ，父元素.removeChild(子元素) ; ，父元素.appendChild(子元素) ，DOM元素.style.left ，document.getElementById(DOM的id值) 。 
	
4.project
  <a src=images-1.html>本例演示HTML代码静态插入img元素，并利用网络最简单地实现加载图片。
  <a src=images-2.html>演示用DOM技术，用代码动态向Web页插入网络上的图片文件。
  <a src=images-3.html>演示改变img类DOM元素的src属性，实现把图像文件读入Web元素，这是一种比较典型的动态更滑图片文件的方法。
  <a src=images-4.html>演示在Web页删除和添加图像DOM节点，这也是典型的动态DOM技术。本例利用视觉错觉让人感觉实现了图像移动，还利用算法实现类似画面循环的效果。
  <a src=images-5.html>对照前面案例的视觉错觉造成的画面移动效果，本例探索图像真实移动的代码。我们可以为Web的DOM元素设定绝对定位，然后通过异步代码控制元素的style属性的坐标变化，实现图像逐渐移动的动画。
  <a src=images-6.html>在前面案例基础上，将自定义fbs数组元素重构为自定义对象，该对象实现DOM信息、X坐标、DOM的id信息存储，通过这些信息，利用算法完美实现10张循环移动的照片动画。
5.reading

getElementById --- By far the most widely used method for selecting elements, getElementById is essential to modern web development. With this handy little tool, you can find and work with any element simply by referencing a unique id attribute. No matter what else happens in the HTML document, getElementById will always be there for you and will reliably select the exact element that you want.
To create a new element in an HTML document, use the document.createElement() method. When you use createElement(), a new beginning and end tag of the type you specify will be created. 
Removing elements  . For all the great things that it lets you do with HTML documents, the HTML DOM is not highly regarded by professional JavaScript programmers. It has a number of oddities and tends to make some things more difficult than they should be. One of the big faults with the DOM is that it doesn’t provide any way to  directly remove an element from a document. Instead, you have to tell the DOM to find the parent of the element you want to remove and then tell the parent to remove its child. 
