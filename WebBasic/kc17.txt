1.title
 Learn  Function Basic By Abstract（初步认识抽象的函数）
2.introduction
 把成熟的代码包装起来，封装成为函数，可以提供给程序反复使用，人们可以避免重复的劳动，计算机也不必存在重复冗余的代码，这是所有计算机高级语言引入函数概念的最初目标。初学者需要较长一段时间才能学会自己构建函数并理解函数的运行原理，了解函数既是作为进入计算机程序设计殿堂的最为重要的标志，更是理解代码的组织架构，进入下一阶段的代码学习核心的基本能力。
 初学者一般需要时间来领会构建函数并理解函数的运行原理，函数这一关是进入计算机程序设计殿堂的最为重要门槛，也是初学者理解代码是如何组织起来，并写出结构化代码的基本前提。本课三个案例都以抽象的数学计算为例，需要有高中阶段数学常识，要涉及以下内容：
 1、开始学习如何在代码中编写自己的函数，或称为自定义函数。
 2、学习JavaScript语言在“函数定义”和“函数调用”二方面的概念和最基础的语法，函数的基础语法在许多计算机高级语言中几乎完全一致（多数计算机高级语言都沿用了经典的C语言语法），作为计算机高级语言的初学者的我们，必须尽快熟悉基本的函数概念和语法表达，把自己代码能力提升一个高度。
 3、本课还引入代码循环结构的另一种语法， “ for循环语句 ” ，在循环次数明确的前提下，for循环更方便也不容易出错。
 4、函数内的局部变量和函数外的全局变量角度，更加深刻理解变量的概念。
 5、对函数的参数（局部变量），函数调用自己这种神奇的递归重要概念进行初步探索。
3.keyword
  function  ,   {   } ,  return , square  ,  factorial  ，for ，++  。

4.project
<a src=001.html title=初步探索“函数定义”和“函数调用”> 本例我们开始学习如何在代码中编写自己的函数，或称为写自定义函数。其中包括：内部只有简单计算的函数、内部有复杂逻辑的函数、函数的名称的建议和使用驼峰语法的方法。
<a src=002.html title=初步探索函数的形参和实参> 本例设计有能判断形参合理性，并能规范返回数据的函数。引入更方便使用的for循环语句和更语法更加快捷的赋值计算符。
<a src=003.html title=初步探索函数的递归> 对任何计算机语言来所，函数都是非常深奥的一个话题，JavaScript的函数更是如此。 本例我们浅浅地看看函数的递归，领略函数强大的表达能力。
5.reading
从代码的变量使用的角度，我们对函数定义和调用的重要概念总结如下：
1.函数内部的变量与函数外界是完全隔离的，因此在函数内部，我们可以比较自由地定义变量和使用变量，在函数内部定义的变量称为局部变量，仅函数内部可用。
2.而在函数外部定义变量与函数一样，属于全局的概念，称为全局变量，全局变量可以在函数内部直接使用，但有一种情况，即函数内部的变量名与全局变量同名时，函数内部将不会访问到全外部的全局变量。即在函数内部局部变量必全局变量优先。
3.在定义函数时，函数的参数称为“形参” ，形参的名字取名时也要做到“顾名思义”，其地位与定义在函数内部的局部变量名同样。
4.在调用函数时传入的参数称为称为“实参”，实参本质上是一个结果（术语称为“值”），复杂的实参可以是复杂的表达式，表达式则可以由各种常量、变量、运算符、函数构建组成。